<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Keep simple & live Strong</title>
 <link href="http://zhangzhe.github.com/atom.xml" rel="self"/>
 <link href="http://zhangzhe.github.com"/>
 <updated>2012-05-21T14:44:40+08:00</updated>
 <id>http://zhangzhe.github.com</id>
 <author>
   <name>zhangzhe</name>
   <email>gary.zzhang@gmail.com</email>
 </author>

 
 <entry>
   <title>（转） A Business Creed 《职业信条》</title>
   <link href="http://zhangzhe.github.com/美文/2012/05/21/a-business-creed"/>
   <updated>2012-05-21T00:00:00+08:00</updated>
   <id>http://zhangzhe.github.com/美文/2012/05/21/a-business-creed</id>
   <content type="html">&lt;h2 id='id3'&gt;注：一位朋友翻译并推荐的。目前已成为部门工作信条。&lt;/h2&gt;

&lt;p&gt;分享一个十年前的今天读到的一篇文章，虽时过境迁，读起来犹足以自砺，早上起来又翻译了一遍，分享以共勉。 注：未证出处，但这似乎是国外的高中读物。&lt;/p&gt;

&lt;p&gt;A Business Creed 《职业信条》&lt;/p&gt;

&lt;p&gt;To respect my work, my associates andmyself. To be honest and fair with them as I expect them to be honest and fairwith me. To be a man whose word carries weight. To be a booster, not a knocker;a pusher, not a kicker; a motor, not a clog.&lt;/p&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code&gt;尊重我的工作，我的同事和我自己。用诚实和公平来对待他们，因为我希望他们用诚实和公平对待我。
做一个言出必信的人。成为一个助推器，不是一个吹毛求疵者；一个推动者，而不是一个抱怨者；成
为引擎，不是刹车片。&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To base my expectations of reward on asolid foundation of service rendered; to be willing to pay the price of successin honest effort. To look upon my work as opportunity, to be seized with joyand made the most of, and not as painful drudgery to be reluctantly endured.&lt;/p&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code&gt;没有付出就没有回报，付出诚实的努力是达至成功的必然代价。把工作看成一个契机，一个追求幸福
快乐的契机，而不是卧薪尝胆的表面苦行。&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To remember that success lies withinmyself; in my own brain, my own ambition, my own courage and determination. Toexpect difficulties and force my way through them, to turn hard experiencesinto capital for future struggles.&lt;/p&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code&gt;要记住，成败只于在自己，在自己的大脑，自己的雄心，自己的勇气和决心。正视并直面困难，眼前的
每一个小怪都在帮助我升级，帮助我为更艰难的boss战做准备。&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To interest my heart and soul in mywork, and aspire to the highest efficiency in the achievement of results. To bepatiently receptive of just criticism and profit from its teaching. To treatequals and superiors with respect, and subordinates with kindly encouragement..&lt;/p&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code&gt;享受工作的乐趣，追求执行力带来的成就感。三人行，虽未必同道，亦必有我师。
对待同事不卑不亢不倨。&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To make a study of my business duties;to know my work from the ground up. To mix brains with my efforts and usesystem and method in all I undertake. To find time to do everything needful bynever letting time find me or my subordinates doing nothing. To hoard days as amiser does dollars, to make every hour bring me dividends in specific resultsaccomplished. To steer clear of dissipation and guard my health of body andpeace of mind as my most precious stock in trade.&lt;/p&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code&gt;研究所在行业，了解自己的工作在其中的意义。知行合一，在实践中寻求方法论和系统论。自己和自己
下属的时间是自己手中的核心资源，珍惜善待这些资源。惜时如金，努力让每一个小时都以一个具体的
成果来终结。节俭、身体健康和内心平和将是你所能掌握的最优质资产。&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, to take a good grip on the joyof life; to play the game like a gentleman; to fight against nothing so hard asmy own weakness, and endeavor to grow in business capacity, and as a man, withthe passage of every day of time.&lt;/p&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code&gt;最后，快乐地活着，做个好人。没有什么敌人比自己的弱点更强大，努力提升自己做事情的能力，拿出
个人样度过自己的每一天。&lt;/code&gt;&lt;/pre&gt;</content>
 </entry>
 
 <entry>
   <title>设计模式之'策略模式'</title>
   <link href="http://zhangzhe.github.com/design_patten/2012/05/18/design-patten-strategy"/>
   <updated>2012-05-18T00:00:00+08:00</updated>
   <id>http://zhangzhe.github.com/design_patten/2012/05/18/design-patten-strategy</id>
   <content type="html">&lt;h1 id='id2'&gt;模式描述&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;策略模式&lt;/code&gt; 是一种行为型模式。 （行为型模式描述类或对象如何交互及如何分配职责，它主要涉及通过合理的处理方法，达到使系统升级性和维护性提高的目的。）&lt;/p&gt;

&lt;p&gt;基本描述：策略模提倡“针对接口编程”，定义好接口，接下来针对接口实现对应算法（策略）。&lt;/p&gt;

&lt;p&gt;详细描述：在软件构建过程中，可使用的算法多种多样，且可能经常发生变化。如果在对象内部实现这些算法，将会使对象变得异常复杂。 策略模式是告诉接口：我要做什么，至于怎么做，则由接口自行选定策略。&lt;/p&gt;

&lt;p&gt;举例来说：我想去上学。然后说我想坐自行车上学，就有人骑自行车带我去，具体怎么骑我是不知道的，封装在那个人身上；我要说坐汽车上学，就有人开车送我去，具体怎么开我不知道，封装在那个人身上； 所以说我只要 &amp;#8216;说&amp;#8217; 就好了，具体去法被封装起来了。 再比如说付款。我们可以定义几个付款类，然后根据用户的选择来决定用哪个付款类来付款。&lt;/p&gt;
&lt;hr /&gt;&lt;br /&gt;
&lt;h1 id='1'&gt;实例1：付款有三种不同的付款方式：支票、信用卡、现金，但接口一致。模拟付款过程。&lt;/h1&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;Customer&lt;/span&gt;
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;initialize&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nb'&gt;name&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;pay_way&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='vi'&gt;@name&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='nb'&gt;name&lt;/span&gt;
    &lt;span class='vi'&gt;@pay_way&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;pay_way&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
  
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;name&lt;/span&gt;
    &lt;span class='vi'&gt;@name&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
  
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;pay&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;number&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='vi'&gt;@pay_way&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;pay&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nb'&gt;self&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;number&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;

&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;Check&lt;/span&gt;
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;pay&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;customer&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;number&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='s2'&gt;&amp;quot;&lt;/span&gt;&lt;span class='si'&gt;#{&lt;/span&gt;&lt;span class='n'&gt;customer&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;name&lt;/span&gt;&lt;span class='si'&gt;}&lt;/span&gt;&lt;span class='s2'&gt; writes a check of &lt;/span&gt;&lt;span class='si'&gt;#{&lt;/span&gt;&lt;span class='n'&gt;number&lt;/span&gt;&lt;span class='si'&gt;}&lt;/span&gt;&lt;span class='s2'&gt;!&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;

&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;Cash&lt;/span&gt;
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;pay&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;customer&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;number&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='s2'&gt;&amp;quot;&lt;/span&gt;&lt;span class='si'&gt;#{&lt;/span&gt;&lt;span class='n'&gt;customer&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;name&lt;/span&gt;&lt;span class='si'&gt;}&lt;/span&gt;&lt;span class='s2'&gt; pays &lt;/span&gt;&lt;span class='si'&gt;#{&lt;/span&gt;&lt;span class='n'&gt;number&lt;/span&gt;&lt;span class='si'&gt;}&lt;/span&gt;&lt;span class='s2'&gt; cash!&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;

&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;CreditCard&lt;/span&gt;
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;pay&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;customer&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;number&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='s2'&gt;&amp;quot;&lt;/span&gt;&lt;span class='si'&gt;#{&lt;/span&gt;&lt;span class='n'&gt;customer&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;name&lt;/span&gt;&lt;span class='si'&gt;}&lt;/span&gt;&lt;span class='s2'&gt; pays &lt;/span&gt;&lt;span class='si'&gt;#{&lt;/span&gt;&lt;span class='n'&gt;number&lt;/span&gt;&lt;span class='si'&gt;}&lt;/span&gt;&lt;span class='s2'&gt; with Credit Card!&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;

&lt;span class='n'&gt;describe&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;Customer&amp;quot;&lt;/span&gt; &lt;span class='k'&gt;do&lt;/span&gt;
  &lt;span class='n'&gt;it&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;should pay with check&amp;quot;&lt;/span&gt; &lt;span class='k'&gt;do&lt;/span&gt;
    &lt;span class='no'&gt;Customer&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;new&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;gary&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='no'&gt;Check&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;new&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;pay&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;500&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;should&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; 
&lt;span class='s2'&gt;&amp;quot;gary writes a check of 500!&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
  
  &lt;span class='n'&gt;it&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;should pay with cash&amp;quot;&lt;/span&gt; &lt;span class='k'&gt;do&lt;/span&gt;
    &lt;span class='no'&gt;Customer&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;new&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;gary&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='no'&gt;Cash&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;new&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;pay&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;500&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;should&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; 
&lt;span class='s2'&gt;&amp;quot;gary pays 500 cash!&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
  
  &lt;span class='n'&gt;it&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;should pay with credit card&amp;quot;&lt;/span&gt; &lt;span class='k'&gt;do&lt;/span&gt;
    &lt;span class='no'&gt;Customer&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;new&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;gary&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='no'&gt;CreditCard&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;new&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;pay&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;500&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;should&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; 
&lt;span class='s2'&gt;&amp;quot;gary pays 500 with Credit Card!&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;
&lt;h1 id='2_iphone_ipad_ipod_'&gt;实例2：创建 iphone、 ipad、 ipod 或者类似产品。具体创建过程不同，但创建接口一致。&lt;/h1&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;Iphone&lt;/span&gt;
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;generate&lt;/span&gt;
    &lt;span class='nb'&gt;p&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;generating iphone&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;

&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;Ipad&lt;/span&gt;
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;generate&lt;/span&gt;
    &lt;span class='nb'&gt;p&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;generating ipad&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;

&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;ElectronicProduct&lt;/span&gt;
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;initialize&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;product&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='vi'&gt;@product&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;product&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;new&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
  
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;generate&lt;/span&gt;
    &lt;span class='vi'&gt;@product&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;generate&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;

&lt;span class='no'&gt;ElectronicProduct&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;new&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='no'&gt;Iphone&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;generate&lt;/span&gt;
&lt;span class='no'&gt;ElectronicProduct&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;new&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='no'&gt;Ipad&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;generate&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;br /&gt;&lt;hr /&gt;
&lt;p&gt;总结：策略模式和模板方法模式很相似，它们都是定义了多个算法，算法间可以相互替换而不影响客户的使用；不同的是模板方法模式使用的是继承来实现，而策略模式是使用组合来实现；模板方法模式定义了一个结构，而策略模式只定义了一个接口。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>设计模式之'模版方法'</title>
   <link href="http://zhangzhe.github.com/design_patten/2012/05/16/design-patten-template"/>
   <updated>2012-05-16T00:00:00+08:00</updated>
   <id>http://zhangzhe.github.com/design_patten/2012/05/16/design-patten-template</id>
   <content type="html">&lt;h1 id='id1'&gt;模式描述&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;模版方法&lt;/code&gt; 是一种行为型模式。 （行为型模式描述类或对象如何交互及如何分配职责，它主要涉及通过合理的处理方法，达到使系统升级性和维护性提高的目的。）&lt;/p&gt;

&lt;p&gt;基本描述：在一个方法里定义算法的骨架，将具体实现方法延迟到其子类。一次性实现算法的不变部分，将可变的行为留给子类。&lt;/p&gt;

&lt;p&gt;更多描述：通过继承把变和不变的部分分开。抽象类应当拥有的是行为组合和尽可能少的具体实现。算法骨架类的公共行为被提取出来集中到父类，要扩展新的功能，就创建新的子类并实现相应功能。&lt;/p&gt;
&lt;hr /&gt;&lt;br /&gt;
&lt;h1 id='1'&gt;实例1：各种格式的报表生成&lt;/h1&gt;

&lt;p&gt;案例描述：报表包括 开头、主干、结尾，但需要各种格式，如xml, yaml, json等。实现各类报表，要求各部分内容一致，但是输出格式不同。 例如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;文本格式:
head: &amp;quot;hello&amp;quot;
body: &amp;quot;keep it simple&amp;quot;
end: &amp;quot;I am strong&amp;quot;

xml格式:
&amp;lt;head&amp;gt;
  hello
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
  keep it simple
&amp;lt;/body&amp;gt;
&amp;lt;end&amp;gt;
  I am strong
&amp;lt;/end&amp;gt;

yaml格式:
head: hello
body: keep it simple
end: I am strong

json格式:
{&amp;quot;head&amp;quot;: &amp;quot;hello&amp;quot;, &amp;quot;body&amp;quot;: &amp;quot;keep it simple&amp;quot;, &amp;quot;end&amp;quot;: &amp;quot;I am strong&amp;quot;}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;代码实现：&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;Report&lt;/span&gt;
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;initialize&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;head&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;body&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;r_end&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='vi'&gt;@head&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;head&lt;/span&gt;
    &lt;span class='vi'&gt;@body&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;body&lt;/span&gt;
    &lt;span class='vi'&gt;@end&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;r_end&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
  
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;output&lt;/span&gt;
    &lt;span class='s2'&gt;&amp;quot;&lt;/span&gt;&lt;span class='si'&gt;#{&lt;/span&gt;&lt;span class='n'&gt;output_head&lt;/span&gt;&lt;span class='si'&gt;}#{&lt;/span&gt;&lt;span class='n'&gt;output_body&lt;/span&gt;&lt;span class='si'&gt;}#{&lt;/span&gt;&lt;span class='n'&gt;output_end&lt;/span&gt;&lt;span class='si'&gt;}&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;

&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;TextReport&lt;/span&gt; &lt;span class='o'&gt;&amp;lt;&lt;/span&gt; &lt;span class='no'&gt;Report&lt;/span&gt;
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;output_head&lt;/span&gt;
    &lt;span class='s2'&gt;&amp;quot;head: &lt;/span&gt;&lt;span class='si'&gt;#{&lt;/span&gt;&lt;span class='vi'&gt;@head&lt;/span&gt;&lt;span class='si'&gt;}&lt;/span&gt;&lt;span class='se'&gt;\n&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
  
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;output_body&lt;/span&gt;
    &lt;span class='s2'&gt;&amp;quot;body: &lt;/span&gt;&lt;span class='si'&gt;#{&lt;/span&gt;&lt;span class='vi'&gt;@body&lt;/span&gt;&lt;span class='si'&gt;}&lt;/span&gt;&lt;span class='se'&gt;\n&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
  
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;output_end&lt;/span&gt;
    &lt;span class='s2'&gt;&amp;quot;end: &lt;/span&gt;&lt;span class='si'&gt;#{&lt;/span&gt;&lt;span class='vi'&gt;@end&lt;/span&gt;&lt;span class='si'&gt;}&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;

&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;XmlReport&lt;/span&gt; &lt;span class='o'&gt;&amp;lt;&lt;/span&gt; &lt;span class='no'&gt;Report&lt;/span&gt;
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;output_head&lt;/span&gt;
    &lt;span class='s2'&gt;&amp;quot;&amp;lt;head&amp;gt;&lt;/span&gt;&lt;span class='si'&gt;#{&lt;/span&gt;&lt;span class='vi'&gt;@head&lt;/span&gt;&lt;span class='si'&gt;}&lt;/span&gt;&lt;span class='s2'&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;&lt;span class='se'&gt;\n&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
  
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;output_body&lt;/span&gt;
    &lt;span class='s2'&gt;&amp;quot;&amp;lt;body&amp;gt;&lt;/span&gt;&lt;span class='si'&gt;#{&lt;/span&gt;&lt;span class='vi'&gt;@body&lt;/span&gt;&lt;span class='si'&gt;}&lt;/span&gt;&lt;span class='s2'&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;span class='se'&gt;\n&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
  
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;output_end&lt;/span&gt;
    &lt;span class='s2'&gt;&amp;quot;&amp;lt;end&amp;gt;&lt;/span&gt;&lt;span class='si'&gt;#{&lt;/span&gt;&lt;span class='vi'&gt;@end&lt;/span&gt;&lt;span class='si'&gt;}&lt;/span&gt;&lt;span class='s2'&gt;&amp;lt;/end&amp;gt;&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;

&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;JsonReport&lt;/span&gt; &lt;span class='o'&gt;&amp;lt;&lt;/span&gt; &lt;span class='no'&gt;Report&lt;/span&gt;
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;output_head&lt;/span&gt;
    &lt;span class='sx'&gt;%Q{\{&amp;quot;head&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class='si'&gt;#{&lt;/span&gt;&lt;span class='vi'&gt;@head&lt;/span&gt;&lt;span class='si'&gt;}&lt;/span&gt;&lt;span class='sx'&gt;&amp;quot;, }&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
  
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;output_body&lt;/span&gt;
    &lt;span class='sx'&gt;%Q{&amp;quot;body&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class='si'&gt;#{&lt;/span&gt;&lt;span class='vi'&gt;@body&lt;/span&gt;&lt;span class='si'&gt;}&lt;/span&gt;&lt;span class='sx'&gt;&amp;quot;, }&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
  
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;output_end&lt;/span&gt;
    &lt;span class='sx'&gt;%Q{&amp;quot;end&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class='si'&gt;#{&lt;/span&gt;&lt;span class='vi'&gt;@end&lt;/span&gt;&lt;span class='si'&gt;}&lt;/span&gt;&lt;span class='sx'&gt;&amp;quot;\}}&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;

&lt;span class='n'&gt;describe&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;TextReport&amp;quot;&lt;/span&gt; &lt;span class='k'&gt;do&lt;/span&gt;
  &lt;span class='n'&gt;it&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;should output well&amp;quot;&lt;/span&gt; &lt;span class='k'&gt;do&lt;/span&gt;
    &lt;span class='no'&gt;TextReport&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;new&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;keep it simple&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;I am strong&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;output&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;should&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; 
&lt;span class='s2'&gt;&amp;quot;head: hello&lt;/span&gt;&lt;span class='se'&gt;\n&lt;/span&gt;&lt;span class='s2'&gt;body: keep it simple&lt;/span&gt;&lt;span class='se'&gt;\n&lt;/span&gt;&lt;span class='s2'&gt;end: I am strong&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt; 
&lt;span class='k'&gt;end&lt;/span&gt;

&lt;span class='n'&gt;describe&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;XmlReport&amp;quot;&lt;/span&gt; &lt;span class='k'&gt;do&lt;/span&gt;
  &lt;span class='n'&gt;it&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;should output well&amp;quot;&lt;/span&gt; &lt;span class='k'&gt;do&lt;/span&gt;
    &lt;span class='no'&gt;XmlReport&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;new&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;keep it simple&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;I am strong&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;output&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;should&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt;
&lt;span class='s2'&gt;&amp;quot;&amp;lt;head&amp;gt;hello&amp;lt;/head&amp;gt;&lt;/span&gt;&lt;span class='se'&gt;\n&lt;/span&gt;&lt;span class='s2'&gt;&amp;lt;body&amp;gt;keep it simple&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;span class='se'&gt;\n&lt;/span&gt;&lt;span class='s2'&gt;&amp;lt;end&amp;gt;I am strong&amp;lt;/end&amp;gt;&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt; 
&lt;span class='k'&gt;end&lt;/span&gt;

&lt;span class='n'&gt;describe&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;JsonReport&amp;quot;&lt;/span&gt; &lt;span class='k'&gt;do&lt;/span&gt;
  &lt;span class='n'&gt;it&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;should output well&amp;quot;&lt;/span&gt; &lt;span class='k'&gt;do&lt;/span&gt;
    &lt;span class='no'&gt;JsonReport&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;new&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;keep it simple&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;I am strong&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;output&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;should&lt;/span&gt; &lt;span class='o'&gt;==&lt;/span&gt; 
&lt;span class='s1'&gt;&amp;#39;{&amp;quot;head&amp;quot;: &amp;quot;hello&amp;quot;, &amp;quot;body&amp;quot;: &amp;quot;keep it simple&amp;quot;, &amp;quot;end&amp;quot;: &amp;quot;I am strong&amp;quot;}&amp;#39;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt; 
&lt;span class='k'&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;br /&gt;&lt;hr /&gt;&lt;br /&gt;
&lt;h1 id='2'&gt;实例2：制作电子产品&lt;/h1&gt;

&lt;p&gt;案例描述：电子产品的生产都要包括硬件、软件的设计和集成起来的调试步骤。但各具体产品的软硬件的具体生产方式和调试方法各不相同。&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;ElectronicProduct&lt;/span&gt;
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;generate&lt;/span&gt;
    &lt;span class='n'&gt;generate_hardware&lt;/span&gt;
    &lt;span class='n'&gt;generate_software&lt;/span&gt;
    &lt;span class='n'&gt;debug&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
 
  &lt;span class='kp'&gt;private&lt;/span&gt;
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;generate_hardware&lt;/span&gt;
    &lt;span class='nb'&gt;p&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;generate_hardware&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
 
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;generate_software&lt;/span&gt;
    &lt;span class='nb'&gt;p&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;generate_software&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
 
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;debug&lt;/span&gt;
    &lt;span class='nb'&gt;p&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;debug&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;

&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;Iphone&lt;/span&gt; &lt;span class='o'&gt;&amp;lt;&lt;/span&gt; &lt;span class='no'&gt;ElectronicProduct&lt;/span&gt;
  &lt;span class='kp'&gt;private&lt;/span&gt;
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;generate_hardware&lt;/span&gt;
    &lt;span class='nb'&gt;p&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;generate_hardware for Iphone&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
 
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;generate_software&lt;/span&gt;
    &lt;span class='nb'&gt;p&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;generate_software for Iphone&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
 
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;debug&lt;/span&gt;
    &lt;span class='nb'&gt;p&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;debugging Iphone&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;

&lt;span class='no'&gt;Iphone&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;new&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;generate&lt;/span&gt;

&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;Ipad&lt;/span&gt; &lt;span class='o'&gt;&amp;lt;&lt;/span&gt; &lt;span class='no'&gt;ElectronicProduct&lt;/span&gt;
  &lt;span class='kp'&gt;private&lt;/span&gt;
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;generate_hardware&lt;/span&gt;
    &lt;span class='nb'&gt;p&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;generate_hardware for Ipad&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
 
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;generate_software&lt;/span&gt;
    &lt;span class='nb'&gt;p&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;generate_software for Ipad&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
 
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;debug&lt;/span&gt;
    &lt;span class='nb'&gt;p&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;debugging Ipad&amp;quot;&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;

&lt;span class='no'&gt;Ipad&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;new&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;generate&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;&lt;br /&gt;&lt;hr /&gt;
&lt;p&gt;总结：模板方法实际上是利用多态这种晚绑定机制来将一些执行动作的定义延迟到子类。子类可以在不改变算法结构的情况下，调整算法的细节实现。 除了可以灵活应对子步骤的变化外，“不用调用我，让我来调用你”的反向控制结构是模版方法的典型应用。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>markItUp examples</title>
   <link href="http://zhangzhe.github.com/2012/05/06/markItUp-examples"/>
   <updated>2012-05-06T00:00:00+08:00</updated>
   <id>http://zhangzhe.github.com/2012/05/06/markItUp-examples</id>
   <content type="html">&lt;h2 id='markitup_universal_markup_editor'&gt;markItUp! Universal markup editor&lt;/h2&gt;

&lt;p&gt;&lt;img src='http://s3.buysellads.com/1255475/101528-1334004497.jpg' alt='markItUp! Logo' /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;markItUp!&lt;/strong&gt; is a javascript over &lt;a href='http://www.jquery.com' title='jQuery Website'&gt;jQuery&lt;/a&gt; plug-in which allow you to turn any textarea in a markup editor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;markItUp!&lt;/strong&gt; is a lightweight fully customizable engine made to easily fit all developers needs in their CMS, blogs, forums or websites.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Html, Textile, Wiki Syntax, Markdown, BBcode&lt;/em&gt; or even your own Markup system can be easily implemented.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;integrate it easily&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;customize toolbar and css look and feel&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;skins&lt;/li&gt;

&lt;li&gt;icons&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;use the engine from anywhere in the page&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code&gt;some commands&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above was a &lt;code&gt;C99&lt;/code&gt; program listing. You can include literal backticks like &lt;code&gt;`this`&lt;/code&gt;.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='nb'&gt;puts&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;code&amp;quot;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content>
 </entry>
 
 
</feed>